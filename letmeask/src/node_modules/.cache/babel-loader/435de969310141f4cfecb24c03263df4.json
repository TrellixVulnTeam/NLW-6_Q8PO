{"ast":null,"code":"var _jsxFileName = \"/home/macsuel/Documentos/MeusProjetos/Aplicacao/letmeask/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Home } from './pages/Home';\nimport { NewRoom } from './pages/NewRoom';\nimport { auth, firebase } from './services/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState();\n  use;\n\n  async function signInWithGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const result = await auth.signInWithPopup(provider);\n\n    if (result.user) {\n      const {\n        displayName,\n        photoURL,\n        uid\n      } = result.user;\n\n      if (!displayName || !photoURL) {\n        throw new Error('Missing information from Google Account');\n      }\n\n      setUser({\n        id: uid,\n        name: displayName,\n        avatar: photoURL\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        user,\n        signInWithGoogle\n      },\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/rooms/new\",\n        component: NewRoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"kGLk6m4BT90iK1d91zRYm0C2usk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/macsuel/Documentos/MeusProjetos/Aplicacao/letmeask/src/App.tsx"],"names":["React","useState","createContext","BrowserRouter","Route","Home","NewRoom","auth","firebase","AuthContext","App","user","setUser","use","signInWithGoogle","provider","GoogleAuthProvider","result","signInWithPopup","displayName","photoURL","uid","Error","id","name","avatar"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA0D,OAA1D;AAIA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;AAEA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,qBAA/B;;AAaA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,EAAD,CAAjC;;AAEP,SAASQ,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,EAAhC;AAEAY,EAAAA,GAAG;;AAEH,iBAAeC,gBAAf,GAAkC;AAChC,UAAMC,QAAQ,GAAG,IAAIP,QAAQ,CAACD,IAAT,CAAcS,kBAAlB,EAAjB;AAEA,UAAMC,MAAM,GAAG,MAAMV,IAAI,CAACW,eAAL,CAAqBH,QAArB,CAArB;;AACA,QAAIE,MAAM,CAACN,IAAX,EAAiB;AACf,YAAM;AAAEQ,QAAAA,WAAF;AAAeC,QAAAA,QAAf;AAAyBC,QAAAA;AAAzB,UAAiCJ,MAAM,CAACN,IAA9C;;AAEA,UAAI,CAACQ,WAAD,IAAgB,CAACC,QAArB,EAA+B;AAC7B,cAAM,IAAIE,KAAJ,CAAU,yCAAV,CAAN;AACD;;AAEDV,MAAAA,OAAO,CAAC;AACNW,QAAAA,EAAE,EAAEF,GADE;AAENG,QAAAA,IAAI,EAAEL,WAFA;AAGNM,QAAAA,MAAM,EAAEL;AAHF,OAAD,CAAP;AAKD;AACF;;AAED,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAET,QAAAA,IAAF;AAAQG,QAAAA;AAAR,OAA7B;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAET;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,SAAS,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAhCQI,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import React, { useState, createContext, useEffect } from 'react';\n\n\n\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport { Home } from './pages/Home';\nimport { NewRoom } from './pages/NewRoom'\nimport { auth, firebase } from './services/firebase';\n\ntype User = {\n  id: string;\n  name: string;\n  avatar: string;\n}\n\ntype AuthContextType = {\n  user: User | undefined;\n  signInWithGoogle: () => Promise<void>;\n}\n\nexport const AuthContext = createContext({} as AuthContextType);\n\nfunction App() {\n  const [user, setUser] = useState<User>();\n\n  use\n\n  async function signInWithGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n\n    const result = await auth.signInWithPopup(provider)\n    if (result.user) {\n      const { displayName, photoURL, uid } = result.user\n\n      if (!displayName || !photoURL) {\n        throw new Error('Missing information from Google Account')\n      }\n\n      setUser({\n        id: uid,\n        name: displayName,\n        avatar: photoURL\n      })\n    }\n  }\n\n  return (\n    <BrowserRouter>\n      <AuthContext.Provider value={{ user, signInWithGoogle }}>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/rooms/new\" component={NewRoom} />\n      </AuthContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}