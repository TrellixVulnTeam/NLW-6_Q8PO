{"ast":null,"code":"var _jsxFileName = \"/home/macsuel/Documentos/MeusProjetos/Aplicacao/letmeask/src/pages/AdminRoom.tsx\",\n    _s = $RefreshSig$();\n\n//import { FormEvent, useState } from 'react';\nimport { useParams } from 'react-router';\nimport logoImg from \"../assets/images/logo.svg\";\nimport deleteImg from \"../assets/images/delete.svg\";\nimport checkImg from \"../assets/images/check.svg\";\nimport answerImg from \"../assets/images/answer.svg\";\nimport { Button } from '../componentes/Button';\nimport { Question } from '../componentes/Question';\nimport { RoomCode } from '../componentes/RoomCode'; //import { useAuth } from '../Hooks/useAuth';\n\nimport { useRoom } from '../Hooks/useRoom'; //import { database } from '../services/firebase';\n\nimport '../styles/room.scss';\nimport { database } from '../services/firebase';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AdminRoom() {\n  _s();\n\n  //const { user } = useAuth();\n  const history = useHistory();\n  const params = useParams();\n  const roomId = params.id;\n  const {\n    questions,\n    title\n  } = useRoom(roomId);\n\n  async function handleEndRoom() {\n    database.ref(`rooms/${roomId}`).update({\n      endedAt: new Date()\n    });\n    history.push('/');\n  }\n\n  async function handleDeleteQuestion(questionId) {\n    if (window.confirm(\"Tem certeza que vocÃª deseja excluir esta pergunta?\")) {\n      await database.ref(`rooms/${roomId}/questions/${questionId}`).remove();\n    }\n  }\n\n  async function handleCheckQuestionAsAnswered(questionId) {\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n      isAnswered: true\n    });\n  }\n\n  async function handleHighlightQuestion(questionId) {\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n      isHighlighted: true\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"Letmeask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(RoomCode, {\n            code: roomId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            isOutlined: true,\n            onClick: handleEndRoom,\n            children: \"Encerrar Sala\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Sala \", title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), questions.length > 0 && questions.length > 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [questions.length, \" perguntas\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 69\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [questions.length, \" pergunta\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 113\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-list\",\n        children: questions.map(question => {\n          return /*#__PURE__*/_jsxDEV(Question, {\n            content: question.content,\n            children: true,\n            author: question.author,\n            isHighlighted: question.isHighlighted,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleCheckQuestionAsAnswered(question.id),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: checkImg,\n                alt: \"Marcar pergunta como respondida\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleHighlightQuestion(question.id),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: answerImg,\n                alt: \"Dar destaque \\xE0 pergunta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleDeleteQuestion(question.id),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: deleteImg,\n                alt: \"Remover pergunta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdminRoom, \"6he5Ol41Rbuu6/tkeYQMVDrsXLE=\", false, function () {\n  return [useHistory, useParams, useRoom];\n});\n\n_c = AdminRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoom\");","map":{"version":3,"sources":["/home/macsuel/Documentos/MeusProjetos/Aplicacao/letmeask/src/pages/AdminRoom.tsx"],"names":["useParams","Button","Question","RoomCode","useRoom","database","useHistory","AdminRoom","history","params","roomId","id","questions","title","handleEndRoom","ref","update","endedAt","Date","push","handleDeleteQuestion","questionId","window","confirm","remove","handleCheckQuestionAsAnswered","isAnswered","handleHighlightQuestion","isHighlighted","logoImg","length","map","question","content","author","checkImg","answerImg","deleteImg"],"mappings":"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","sourcesContent":["//import { FormEvent, useState } from 'react';\nimport { useParams } from 'react-router';\n\nimport logoImg from '../assets/images/logo.svg';\nimport deleteImg from '../assets/images/delete.svg';\nimport checkImg from '../assets/images/check.svg';\nimport answerImg from '../assets/images/answer.svg';\n\nimport { Button } from '../componentes/Button';\nimport { Question } from '../componentes/Question';\nimport { RoomCode } from '../componentes/RoomCode';\n//import { useAuth } from '../Hooks/useAuth';\nimport { useRoom } from '../Hooks/useRoom';\n//import { database } from '../services/firebase';\n\nimport '../styles/room.scss'\nimport { database } from '../services/firebase';\nimport { useHistory } from 'react-router-dom';\n\ntype RoomParams = {\n    id: string;\n}\n\nexport function AdminRoom() {\n    //const { user } = useAuth();\n    const history = useHistory()\n    const params = useParams<RoomParams>();\n    const roomId = params.id;\n    const { questions, title } = useRoom(roomId)\n\n    async function handleEndRoom() {\n        database.ref(`rooms/${roomId}`).update({\n            endedAt: new Date()\n        })\n        history.push('/');\n    }\n\n    async function handleDeleteQuestion(questionId: string) {\n        if(window.confirm(\"Tem certeza que vocÃª deseja excluir esta pergunta?\")){\n            await database.ref(`rooms/${roomId}/questions/${questionId}`).remove();\n        }\n    }\n\n    async function handleCheckQuestionAsAnswered(questionId: string) {\n        await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n            isAnswered: true,\n        })\n    }\n \n    async function handleHighlightQuestion(questionId: string) {\n        await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n            isHighlighted: true,\n        })\n    }\n    return (\n        <div id=\"page-room\">\n            <header>\n                <div className=\"content\">\n                    <img src={logoImg} alt=\"Letmeask\" />\n                    <div>\n                        <RoomCode code={roomId} />\n                        <Button isOutlined onClick={handleEndRoom}>Encerrar Sala</Button>\n                    </div>\n                </div>\n            </header>\n\n            <main>\n                <div className=\"room-title\">\n                    <h1>Sala {title}</h1>\n                    {questions.length > 0 && questions.length > 1 ? <span>{questions.length} perguntas</span> : <span>{questions.length} pergunta</span>}\n                </div>\n\n                <div className=\"question-list\">\n                    {questions.map(question => {\n                        return (\n                            <Question\n                                key={question.id}\n                                content={question.content}\n                                children\n                                author={question.author}\n                                isHighlighted={question.isHighlighted}\n                                \n                            >\n                                <button\n                                    type = \"button\"\n                                    onClick={() => handleCheckQuestionAsAnswered(question.id)}\n                                >\n                                    <img src={checkImg} alt=\"Marcar pergunta como respondida\" />\n                                </button>\n                                <button\n                                    type = \"button\"\n                                    onClick={() => handleHighlightQuestion(question.id)}\n                                >\n                                    <img src={answerImg} alt=\"Dar destaque Ã  pergunta\" />\n                                </button>\n                                <button\n                                    type = \"button\"\n                                    onClick={() => handleDeleteQuestion(question.id)}\n                                >\n                                    <img src={deleteImg} alt=\"Remover pergunta\" />\n                                </button>\n                            </Question>\n                        );\n                    })}\n                </div>\n            </main>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}