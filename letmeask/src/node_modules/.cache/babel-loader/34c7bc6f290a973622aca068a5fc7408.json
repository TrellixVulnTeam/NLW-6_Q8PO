{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { database } from '../services/firebase';\nexport function useRoom(roomId) {\n  _s();\n\n  const [questions, setQuestions] = useState([]);\n  const [title, setTitle] = useState('');\n  useEffect(() => {\n    const roomRef = database.ref(`rooms/${roomId}`);\n    roomRef.on('value', room => {\n      var _databaseRoom$questio;\n\n      const databaseRoom = room.val();\n      const firebaseQuestions = (_databaseRoom$questio = databaseRoom.questions) !== null && _databaseRoom$questio !== void 0 ? _databaseRoom$questio : {};\n      const parsedQuestions = Object.entries(firebaseQuestions).map(([key, value]) => {\n        var _value$likes;\n\n        return {\n          id: key,\n          content: value.content,\n          author: value.author,\n          isHighlighted: value.isHighlighted,\n          isAnswered: value.isAnswered,\n          likeCount: Object.values((_value$likes = value.likes) !== null && _value$likes !== void 0 ? _value$likes : {}).length\n        };\n      });\n      setTitle(databaseRoom.title);\n      setQuestions(parsedQuestions);\n      console.log(parsedQuestions);\n    });\n  }, [roomId]);\n  return {\n    questions,\n    title\n  };\n}\n\n_s(useRoom, \"en7WwbUlyVUkE+lFVapgearQsFw=\");","map":{"version":3,"sources":["/home/macsuel/Documentos/MeusProjetos/Aplicacao/letmeask/src/Hooks/useRoom.ts"],"names":["useState","useEffect","database","useRoom","roomId","questions","setQuestions","title","setTitle","roomRef","ref","on","room","databaseRoom","val","firebaseQuestions","parsedQuestions","Object","entries","map","key","value","id","content","author","isHighlighted","isAnswered","likeCount","values","likes","length","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,sBAAzB;AA0BA,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAiC;AAAA;;AACpC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAiB,EAAjB,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,OAAO,GAAGP,QAAQ,CAACQ,GAAT,CAAc,SAAQN,MAAO,EAA7B,CAAhB;AAEAK,IAAAA,OAAO,CAACE,EAAR,CAAW,OAAX,EAAoBC,IAAI,IAAI;AAAA;;AACxB,YAAMC,YAAY,GAAGD,IAAI,CAACE,GAAL,EAArB;AACA,YAAMC,iBAAoC,4BAAGF,YAAY,CAACR,SAAhB,yEAA6B,EAAvE;AACA,YAAMW,eAAe,GAAGC,MAAM,CAACC,OAAP,CAAeH,iBAAf,EAAkCI,GAAlC,CAAsC,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAkB;AAAA;;AAC5E,eAAO;AACHC,UAAAA,EAAE,EAAEF,GADD;AAEHG,UAAAA,OAAO,EAAEF,KAAK,CAACE,OAFZ;AAGHC,UAAAA,MAAM,EAAEH,KAAK,CAACG,MAHX;AAIHC,UAAAA,aAAa,EAAEJ,KAAK,CAACI,aAJlB;AAKHC,UAAAA,UAAU,EAAEL,KAAK,CAACK,UALf;AAMHC,UAAAA,SAAS,EAAEV,MAAM,CAACW,MAAP,iBAAcP,KAAK,CAACQ,KAApB,uDAA6B,EAA7B,EAAiCC;AANzC,SAAP;AAQH,OATuB,CAAxB;AAUAtB,MAAAA,QAAQ,CAACK,YAAY,CAACN,KAAd,CAAR;AACAD,MAAAA,YAAY,CAACU,eAAD,CAAZ;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYhB,eAAZ;AACH,KAhBD;AAiBH,GApBQ,EAoBN,CAACZ,MAAD,CApBM,CAAT;AAqBA,SAAO;AAAEC,IAAAA,SAAF;AAAaE,IAAAA;AAAb,GAAP;AACH;;GA1BeJ,O","sourcesContent":["import { useState, useEffect } from 'react';\nimport { database } from '../services/firebase';\n\ntype QuestionType = {\n    id: string;\n    author: {\n        name: string;\n        avatar: string;\n    }\n    content: string;\n    isAnswered: boolean;\n    isHighlighted: boolean;\n}\n\ntype FirebaseQuestions = Record<string, {\n    author: {\n        name: string;\n        avatar: string;\n    }\n    content: string;\n    isAnswered: boolean;\n    isHighlighted: boolean;\n    likes: Record<string, {\n        authorId: string;\n    }>\n}>\n\nexport function useRoom(roomId: string) {\n    const [questions, setQuestions] = useState<QuestionType[]>([]);\n    const [title, setTitle] = useState('');\n\n    useEffect(() => {\n        const roomRef = database.ref(`rooms/${roomId}`);\n\n        roomRef.on('value', room => {\n            const databaseRoom = room.val();\n            const firebaseQuestions: FirebaseQuestions = databaseRoom.questions ?? {};\n            const parsedQuestions = Object.entries(firebaseQuestions).map(([key, value]) => {\n                return {\n                    id: key,\n                    content: value.content,\n                    author: value.author,\n                    isHighlighted: value.isHighlighted,\n                    isAnswered: value.isAnswered,\n                    likeCount: Object.values(value.likes ?? {}).length\n                }\n            })\n            setTitle(databaseRoom.title);\n            setQuestions(parsedQuestions);\n            console.log(parsedQuestions);\n        })\n    }, [roomId]);\n    return { questions, title }\n}"]},"metadata":{},"sourceType":"module"}