{"ast":null,"code":"var _jsxFileName = \"/home/macsuel/Documentos/MeusProjetos/Aplicacao/letmeask/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { createContext } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Home } from './pages/Home';\nimport { NewRoom } from './pages/NewRoom';\nimport { auth, firebase } from './services/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState();\n\n  function signInWithGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider).then(result => {\n      if (result.user) {\n        const {\n          displayName,\n          photoURL,\n          uid\n        } = result.user;\n\n        if (!displayName || !photoURL) {\n          throw new Error('Missing information from Google Account');\n        }\n\n        setUser({\n          id: uid,\n          name: displayName,\n          avatar: photoURL\n        });\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        user,\n        signInWithGoogle\n      },\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/rooms/new\",\n        component: NewRoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"kGLk6m4BT90iK1d91zRYm0C2usk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/macsuel/Documentos/MeusProjetos/Aplicacao/letmeask/src/App.tsx"],"names":["React","useState","createContext","BrowserRouter","Route","Home","NewRoom","auth","firebase","AuthContext","App","user","setUser","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","then","result","displayName","photoURL","uid","Error","id","name","avatar"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,aAAT,QAA8B,OAA9B;AAEA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;AAEA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,qBAA/B;;AAQA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,EAAD,CAAjC;;AAEP,SAASQ,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,EAAhC;;AAEA,WAASY,gBAAT,GAA4B;AAC1B,UAAMC,QAAQ,GAAG,IAAIN,QAAQ,CAACD,IAAT,CAAcQ,kBAAlB,EAAjB;AAEAR,IAAAA,IAAI,CAACS,eAAL,CAAqBF,QAArB,EAA+BG,IAA/B,CAAoCC,MAAM,IAAI;AAC5C,UAAGA,MAAM,CAACP,IAAV,EAAgB;AACd,cAAM;AAAEQ,UAAAA,WAAF;AAAeC,UAAAA,QAAf;AAAyBC,UAAAA;AAAzB,YAAiCH,MAAM,CAACP,IAA9C;;AAEA,YAAG,CAACQ,WAAD,IAAgB,CAACC,QAApB,EAA8B;AAC5B,gBAAM,IAAIE,KAAJ,CAAU,yCAAV,CAAN;AACD;;AAEDV,QAAAA,OAAO,CAAC;AACNW,UAAAA,EAAE,EAAEF,GADE;AAENG,UAAAA,IAAI,EAAEL,WAFA;AAGNM,UAAAA,MAAM,EAAEL;AAHF,SAAD,CAAP;AAKD;AAGF,KAhBD;AAiBD;;AAED,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAET,QAAAA,IAAF;AAAQE,QAAAA;AAAR,OAA7B;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAER;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,SAAS,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAjCQI,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport { createContext } from 'react'\n\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport { Home } from './pages/Home';\nimport { NewRoom } from './pages/NewRoom'\nimport { auth, firebase } from './services/firebase';\n\ntype AuthContextType = {\n  user: object;\n  \n\n}\n\nexport const AuthContext = createContext({} as any);\n\nfunction App() {\n  const [user, setUser] = useState();\n\n  function signInWithGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n\n    auth.signInWithPopup(provider).then(result => {\n      if(result.user) {\n        const { displayName, photoURL, uid } = result.user\n\n        if(!displayName || !photoURL) {\n          throw new Error('Missing information from Google Account')\n        }\n\n        setUser({\n          id: uid,\n          name: displayName,\n          avatar: photoURL\n        })\n      }\n\n      \n    })\n  }\n\n  return (\n    <BrowserRouter>\n      <AuthContext.Provider value={{ user, signInWithGoogle }}>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/rooms/new\" component={NewRoom} />\n      </AuthContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}