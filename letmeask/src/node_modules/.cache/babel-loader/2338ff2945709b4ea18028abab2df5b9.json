{"ast":null,"code":"var _jsxFileName = \"/home/macsuel/Documentos/MeusProjetos/Aplicacao/letmeask/src/pages/Room.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useParams } from 'react-router';\nimport logoImg from \"../assets/images/logo.svg\";\nimport { Button } from '../componentes/Button';\nimport { RoomCode } from '../componentes/RoomCode';\nimport { useAuth } from '../Hooks/useAuth';\nimport { database } from '../services/firebase';\nimport '../styles/room.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Room() {\n  _s();\n\n  const {\n    user\n  } = useAuth();\n  const params = useParams();\n  const [newQuestion, setNewQuestion] = useState('');\n  const roomId = params.id;\n\n  async function handleSendQuestion(event) {\n    event.preventDefault();\n\n    if (newQuestion.trim() === '') {\n      return;\n    }\n\n    if (!user) {\n      throw new Error('You must be logged in');\n    }\n\n    const question = {\n      content: newQuestion,\n      author: {\n        name: user.name,\n        avatar: user.avatar\n      },\n      isHighlighted: false,\n      isAnswered: false\n    };\n    await database.ref(`rooms/${roomId}/quetions`).push(question);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"Letmeask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RoomCode, {\n          code: roomId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sala React\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"4 pergutas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendQuestion,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"O que voc\\xEA deseja perguntar?\",\n          onChange: event => setNewQuestion(event.target.value),\n          value: newQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Para enviar uma pergunta, \", /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"fa\\xE7a seu login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: !user,\n            children: \"Eviar pergunta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Room, \"3dflbITp0dhDyYV3RTdCnnGrfTs=\", false, function () {\n  return [useAuth, useParams];\n});\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/home/macsuel/Documentos/MeusProjetos/Aplicacao/letmeask/src/pages/Room.tsx"],"names":["useState","useParams","Button","RoomCode","useAuth","database","Room","user","params","newQuestion","setNewQuestion","roomId","id","handleSendQuestion","event","preventDefault","trim","Error","question","content","author","name","avatar","isHighlighted","isAnswered","ref","push","logoImg","target","value"],"mappings":";;;AAAA,SAAoBA,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,cAA1B;;AAIA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AAEA,OAAO,qBAAP;;AAOA,OAAO,SAASC,IAAT,GAAgB;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAWH,OAAO,EAAxB;AACA,QAAMI,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMW,MAAM,GAAGH,MAAM,CAACI,EAAtB;;AAGA,iBAAeC,kBAAf,CAAkCC,KAAlC,EAAoD;AAChDA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGN,WAAW,CAACO,IAAZ,OAAuB,EAA1B,EAA8B;AAC1B;AACH;;AAED,QAAG,CAACT,IAAJ,EAAU;AACN,YAAM,IAAIU,KAAJ,CAAU,uBAAV,CAAN;AACH;;AAED,UAAMC,QAAQ,GAAG;AACbC,MAAAA,OAAO,EAAEV,WADI;AAEbW,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAEd,IAAI,CAACc,IADP;AAEJC,QAAAA,MAAM,EAAEf,IAAI,CAACe;AAFT,OAFK;AAMbC,MAAAA,aAAa,EAAE,KANF;AAObC,MAAAA,UAAU,EAAE;AAPC,KAAjB;AAUA,UAAMnB,QAAQ,CAACoB,GAAT,CAAc,SAAQd,MAAO,WAA7B,EAAyCe,IAAzC,CAA8CR,QAA9C,CAAN;AAGH;;AACD,sBACI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,4BACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAK,UAAA,GAAG,EAAES,OAAV;AAAmB,UAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEhB;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAM,QAAA,QAAQ,EAAEE,kBAAhB;AAAA,gCACI;AACA,UAAA,WAAW,EAAC,iCADZ;AAEA,UAAA,QAAQ,EAAEC,KAAK,IAAIJ,cAAc,CAACI,KAAK,CAACc,MAAN,CAAaC,KAAd,CAFjC;AAGA,UAAA,KAAK,EAAEpB;AAHP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAA,kEAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,QAAQ,EAAE,CAACF,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;;GA/DeD,I;UACKF,O,EACFH,S;;;KAFHK,I","sourcesContent":["import { FormEvent, useState } from 'react';\nimport { useParams } from 'react-router';\n\nimport logoImg from '../assets/images/logo.svg'\n\nimport { Button } from '../componentes/Button'\nimport { RoomCode } from '../componentes/RoomCode';\nimport { useAuth } from '../Hooks/useAuth';\nimport { database } from '../services/firebase';\n\nimport '../styles/room.scss'\n\ntype RoomParams = {\n    id: string;\n}\n\n\nexport function Room() {\n    const { user } = useAuth()\n    const params = useParams<RoomParams>();\n    const [newQuestion, setNewQuestion] = useState('');\n\n    const roomId = params.id;\n\n\n    async function handleSendQuestion(event: FormEvent) {\n        event.preventDefault();\n\n        if(newQuestion.trim() === '') {\n            return;\n        }\n\n        if(!user) {\n            throw new Error('You must be logged in');\n        }\n\n        const question = {\n            content: newQuestion,\n            author: {\n                name: user.name,\n                avatar: user.avatar,\n            },\n            isHighlighted: false,\n            isAnswered: false,\n        }\n\n        await database.ref(`rooms/${roomId}/quetions`).push(question)\n\n        \n    }\n    return (\n        <div id=\"page-room\">\n            <header>\n                <div className=\"content\">\n                    <img src={logoImg} alt=\"Letmeask\" />\n                    <RoomCode code={roomId}/>\n                </div>\n            </header>\n\n            <main>\n                <div className=\"room-title\">\n                    <h1>Sala React</h1>\n                    <span>4 pergutas</span>\n                </div>\n\n                <form onSubmit={handleSendQuestion}>\n                    <textarea \n                    placeholder=\"O que você deseja perguntar?\" \n                    onChange={event => setNewQuestion(event.target.value)}\n                    value={newQuestion}\n                    />\n\n                    <div className=\"form-footer\">\n                        <span>Para enviar uma pergunta, <button>faça seu login</button></span>\n                        <Button type=\"submit\" disabled={!user}>Eviar pergunta</Button>\n                    </div>\n                </form>\n            </main>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}